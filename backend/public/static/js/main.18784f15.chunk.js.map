{"version":3,"sources":["hooks/useAuth.js","components/ConnectedRoute.js","components/navigation/Links.js","assets/A.gif","screens/Home.js","screens/Dashboard.js","assets/wyvern.gif","screens/NotFound.js","utils/api.js","components/Input.js","components/url.js","components/profile/Profile.js","components/library/Library.js","components/profile/settings/email/UseEUpdate.js","components/profile/settings/email/ValidateEmail.js","components/profile/settings/email/UpdateEmail.js","components/profile/settings/email/SuccessfulUpdate.js","components/profile/settings/email/EmailUpdateForm.js","components/profile/settings/Settings.js","components/dinocard/DinoCard.js","components/navigation/Navigation.js","components/globalStyles.js","components/Themes.js","components/Toggler.js","assets/stegorock.gif","store/actions/users.js","App.js","components/useDarkMode.js","reportWebVitals.js","store/reducers/userReducer.js","store/reduxStore.js","index.js"],"names":["useAuth","useMagicLink","ConnectedRoute","isProtected","redirectIfAuthenticated","ComponentToRender","component","rest","Error","auth","loggedIn","render","location","to","pathname","state","from","renderedProps","defaultProps","Links","props","className","Home","src","logo","alt","Dashboard","NotFound","url","addTolibrary","data","a","axios","post","register","getUser","email","get","emailData","getDinos","userID","console","log","response","Input","useState","id","setId","name","setName","health","setHealth","stamina","setStamina","oxygen","setOxygen","food","setFood","weight","setWeight","meleeDamage","setMeleeDamage","movementSpeed","setMovementSpeed","torpidity","setTorpidity","imprinting","setImprinting","gender","setGender","creatureType","setCreatureType","status","setStatus","level","setLevel","uniqueUser","dinoData","useSelector","CardDeck","Card","onSubmit","e","preventDefault","Title","Form","Group","controlId","Label","Control","onChange","target","value","as","type","min","max","required","URL_BASE_URL","axiosInstance","create","baseURL","fetchPics","uploadPic","Profile","onFormSubmit","photos","setPhotos","imgData","enabled","tribeName","SetTribeName","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","useEffect","getPhotos","submitForm","event","setTimeout","files","map","pic","height","width","accept","disabled","Table","dinos","setDinos","displayDinos","key","index","toUpperCase","UseEUpdate","callback","validate","email2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleChange","handleSubmit","ValidateEmail","test","UpdateEmail","noValidate","placeholder","SuccessfulUpdate","UpdateEmailForm","isSubmitted","setIsSubmitted","Settings","EmailUpdateForm","Modal","setAppElement","DinoCard","modalIsOpen","setModalIsOpen","img","onClick","isOpen","onRequestClose","Navigation","exact","path","Library","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","Button","styled","button","Toggle","toggleTheme","SIGNUP","signUp","v4","payload","LOGIN","logIn","getuser","App","dispatch","useDispatch","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","prompt","loginNow","error","login","loading","loggingIn","loggingOut","logout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","persistedState","serializedState","JSON","parse","err","loadFromLocalStorage","store","createStore","composeWithDevTools","subscribe","stringify","saveToLocalStorage","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18784f15.chunk.js","sourcesContent":["import useMagicLink from \"use-magic-link\";\r\n\r\nexport default function useAuth() {\r\n  return useMagicLink(\"pk_test_C8D41DCE9999FDC6\");\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nexport default function ConnectedRoute({\r\n  isProtected,\r\n  redirectIfAuthenticated,\r\n  component: ComponentToRender,\r\n  ...rest\r\n}) {\r\n  if (!ComponentToRender) {\r\n    throw new Error(\"ConnectedRoute MUST have a prop named 'component'\");\r\n  }\r\n\r\n  const auth = useAuth();\r\n\r\n  if (redirectIfAuthenticated && auth.loggedIn) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) => (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/dashboard`,\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (isProtected === null || (isProtected && auth.loggedIn)) {\r\n    return <Route {...rest} render={(renderedProps) => <ComponentToRender {...renderedProps} />} />;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => (\r\n        <Redirect\r\n          to={{\r\n            pathname: `/`,\r\n            state: { from: location },\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nConnectedRoute.defaultProps = {\r\n  isProtected: null,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\nimport \"./Links.css\";\r\n\r\nexport default function Links(props) {\r\n  return (\r\n    <div className=\"links\">\r\n      <div className=\"home\">\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n      <div className=\"profile-link\">\r\n        <Link to=\"/user\">Profile</Link>\r\n      </div>\r\n      <div className=\"dinosaur-link\">\r\n        <Link to=\"/input\">Dinosaurs</Link>\r\n      </div>\r\n      <div className=\"library-link\">\r\n        <Link to=\"/library\">Library</Link>\r\n      </div>\r\n      <div className=\"test\">\r\n        <Link to=\"/test\">Test</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/A.1dd46165.gif\";","import Links from \"../components/navigation/Links\";\r\nimport logo from \"../assets/A.gif\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <Links />\r\n      <div>\r\n        <img src={logo} alt=\"Ark A\" />\r\n        <br />\r\n        <h1>Welcome Home</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import logo from \"../assets/A.gif\";\r\n\r\nimport Links from \"../components/navigation/Links\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <>\r\n      <Links />\r\n      <div>\r\n        <img src={logo} alt=\"Ark A\" />\r\n        <br />\r\n        <h1>Welcome Home</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/wyvern.36f464fe.gif\";","import logo from \"../assets/wyvern.gif\";\r\nimport Links from \"../components/navigation/Links\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <>\r\n      <Links />\r\n      <div>\r\n        <img src={logo} alt=\"You should leave\" />\r\n        <br />\r\n        <h1>You should leave this place...</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n\r\nconst url = \"http://localhost:4000\";\r\n\r\nexport const addTolibrary = async (data) => {\r\n  axios.post(`${url}/library`, data);\r\n};\r\n\r\nexport const libraryStorage = async () => {\r\n  const library = await fetch(`${url}/library`);\r\n  return library;\r\n};\r\n\r\nexport const register = async (data) => {\r\n  axios.post(`${url}/signup`, data);\r\n};\r\n\r\nexport const getUser = async (email) => {\r\n  const emailData = await axios.get(`${url}/login/${email}`);\r\n  return emailData.data;\r\n};\r\n\r\nexport const getDinos = async (userID) => {\r\n  console.log(userID);\r\n  const response = await axios.get(`${url}/library/${userID}`);\r\n  return response.data;\r\n  //return response.userID?\r\n};\r\n\r\n//const removeData = (id) => {\r\n// axios.delete(`${URL}/dinos/${id}`).then((res) => {\r\n//   const del = dinos.filter((dino) => id !== dino._id);\r\n//   setDinos(del);\r\n//   console.log(\"res\", res);\r\n// });\r\n//console.log(removeData);\r\n// };\r\n\r\n// const deleteData = (id, e) => {\r\n//   axios.delete();\r\n// };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Links from \"../components/navigation/Links\";\r\nimport { addTolibrary } from \"../utils/api\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = () => {\r\n  const [id, setId] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [health, setHealth] = useState(0);\r\n  const [stamina, setStamina] = useState(0);\r\n  const [oxygen, setOxygen] = useState(0);\r\n  const [food, setFood] = useState(0);\r\n  const [weight, setWeight] = useState(0);\r\n  const [meleeDamage, setMeleeDamage] = useState(0);\r\n  const [movementSpeed, setMovementSpeed] = useState(0);\r\n  const [torpidity, setTorpidity] = useState(0);\r\n  const [imprinting, setImprinting] = useState(0);\r\n  const [gender, setGender] = useState(\"Choose...\");\r\n  const [creatureType, setCreatureType] = useState(\"Choose...\");\r\n  const [status, setStatus] = useState(\"Choose...\");\r\n  const [level, setLevel] = useState(1);\r\n  const stats = {\r\n    creatureType,\r\n    level,\r\n    status,\r\n    id,\r\n    gender,\r\n    name,\r\n    health,\r\n    stamina,\r\n    oxygen,\r\n    food,\r\n    weight,\r\n    meleeDamage,\r\n    movementSpeed,\r\n    torpidity,\r\n    imprinting,\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTolibrary(uniqueUser);\r\n    setCreatureType(\"Choose...\");\r\n    setGender();\r\n    setId(0);\r\n    setName(\"\");\r\n    setHealth(0);\r\n    setStamina(0);\r\n    setOxygen(0);\r\n    setFood(0);\r\n    setWeight(0);\r\n    setMeleeDamage(0);\r\n    setMovementSpeed(0);\r\n    setTorpidity(0);\r\n    setImprinting(0);\r\n  };\r\n\r\n  const uniqueUser = {\r\n    userID: \"\",\r\n    dinoData: stats,\r\n  };\r\n\r\n  uniqueUser.userID = useSelector((state) => state.id);\r\n\r\n  return (\r\n    <>\r\n      <Links />\r\n      <CardDeck>\r\n        <Card>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"ui-form\">\r\n              <Card.Title>\r\n                <h1>Enter stats</h1>\r\n              </Card.Title>\r\n              <div className=\"fields\">\r\n                <Form.Group controlId=\"CreatureType\">\r\n                  <Form.Label>Creature</Form.Label>\r\n                  <Form.Control onChange={(e) => setCreatureType(e.target.value)} value={creatureType} as=\"select\">\r\n                    <option>Choose...</option>\r\n                    <option value=\"Giganotosaurus\">Giganotosaurus</option>\r\n                    <option value=\"Quetzal\">Quetzal</option>\r\n                    <option value=\"Stegosaurus\">Stegosaurus</option>\r\n                    <option value=\"Tusoteuthis\">Tusoteuthis</option>\r\n                    <option value=\"Yutyrannus\">Yutyrannus</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Gender</Form.Label>\r\n                  <Form.Control onChange={(e) => setGender(e.target.value)} value={gender} as=\"select\">\r\n                    <option>Choose...</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Spayed\">Spayed</option>\r\n                    <option value=\"Neutered\">Neutered</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"Status\">\r\n                  <Form.Label>Status</Form.Label>\r\n                  <Form.Control onChange={(e) => setStatus(e.target.value)} value={status} as=\"select\">\r\n                    <option>Choose...</option>\r\n                    <option value=\"Available\">Available</option>\r\n                    <option value=\"On Timer\">On Timer</option>\r\n                    <option value=\"Cryopod\">Cryopod</option>\r\n                    <option value=\"Deceased\">Deceased</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <div className=\"levelRow\">\r\n                  <Card.Title>Level</Card.Title>\r\n                  <input\r\n                    className=\"level\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"500\"\r\n                    value={level}\r\n                    onChange={(e) => setLevel(e.target.value)}\r\n                  />\r\n                </div>\r\n                <Card.Title>\r\n                  <>Name</>\r\n                </Card.Title>\r\n                <input className=\"name\" type=\"string\" value={name} required onChange={(e) => setName(e.target.value)} />\r\n                <Card.Title> Health</Card.Title>\r\n                <input\r\n                  className=\"health\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={health}\r\n                  onChange={(e) => setHealth(e.target.value)}\r\n                />\r\n                <Card.Title>Stamina</Card.Title>\r\n                <input\r\n                  className=\"stamina\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={stamina}\r\n                  onChange={(e) => setStamina(e.target.value)}\r\n                />\r\n                <Card.Title>Oxygen</Card.Title>\r\n                <input\r\n                  className=\"oxygen\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={oxygen}\r\n                  onChange={(e) => setOxygen(e.target.value)}\r\n                />\r\n                <Card.Title>Food</Card.Title>\r\n                <input className=\"food\" type=\"number\" min=\"1\" value={food} onChange={(e) => setFood(e.target.value)} />\r\n                <Card.Title>Weight</Card.Title>\r\n                <input\r\n                  className=\"weight\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                />\r\n                <Card.Title>Melee Damage</Card.Title>\r\n                <input\r\n                  className=\"meleeDamage\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={meleeDamage}\r\n                  onChange={(e) => setMeleeDamage(e.target.value)}\r\n                />\r\n                <Card.Title>Movement Speed</Card.Title>\r\n                <input\r\n                  className=\"movementSpeed\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={movementSpeed}\r\n                  onChange={(e) => setMovementSpeed(e.target.value)}\r\n                />\r\n                <Card.Title>Torpidity</Card.Title>\r\n                <input\r\n                  className=\"torpidity\"\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  value={torpidity}\r\n                  onChange={(e) => setTorpidity(e.target.value)}\r\n                />\r\n                <Card.Title> Ark Sample ID</Card.Title>\r\n                <input className=\"id\" type=\"number\" min=\"1\" value={id} onChange={(e) => setId(e.target.value)} />\r\n                <Card.Title>Imprinting</Card.Title>\r\n                <input\r\n                  className=\"imprinting\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  value={imprinting}\r\n                  onChange={(e) => setImprinting(e.target.value)}\r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                <button className=\"input-button\" type=\"submit\" value=\"Submit\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </CardDeck>\r\n    </>\r\n  );\r\n};\r\nexport default Input;\r\n","import axios from 'axios'\r\n\r\nexport const URL_BASE_URL = \"http://localhost:4000\"\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: URL_BASE_URL,\r\n});\r\n\r\nexport default axiosInstance;\r\nexport const fetchPics = async () => {\r\n  const { data } = await axiosInstance.get(\"/user\")\r\n  return data;\r\n};\r\n\r\nexport const uploadPic = async data => {\r\n  console.log({ data })\r\n  throw new Error(\"oops\")\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Links from \"../navigation/Links\";\r\nimport \"./Profile.css\";\r\nimport { fetchPics, URL_BASE_URL, uploadPic } from '../url'\r\n\r\nconst Profile = ({ onFormSubmit }) => {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [imgData, setImgData] = useState(null);\r\n  const [enabled, setEnabled] = useState(false);\r\n  const [tribeName, SetTribeName] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [uploadStatus, setUploadStatus] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    async function getPhotos() {\r\n      setPhotos(await fetchPics());\r\n    }\r\n\r\n    getPhotos();\r\n  }, []);\r\n\r\n  const submitForm = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      await uploadPic(selectedFile);\r\n      setUploadStatus(\"success\");\r\n    } catch {\r\n      setUploadStatus(\"Unable to upload photo\")\r\n    } finally {\r\n      setTimeout(() => {\r\n        setUploadStatus(null)\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const onselectFile = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Links />\r\n      <Link to=\"/user/settings\">Settings</Link>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n      <form onSubmit={submitForm}>\r\n        <input type=\"file\" name=\"photo\" onChange={onselectFile} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <div className=\"image upload\">\r\n        <h3 className=\"avatar\">Avatar</h3>\r\n        {photos.map((pic) => (\r\n          <img key={pic} src={`${URL_BASE_URL}${pic}`} alt={pic} height=\"180px\" width=\"180px\" />\r\n        ))}\r\n      </div>\r\n      <img className=\"profilePic\" src={imgData} alt=\"\" height=\"180px\" width=\"180px\" />\r\n      <input\r\n        className=\"imagesUpload\"\r\n        type=\"file\"\r\n        accept=\".jpg, .jpeg, .pdf, .png, .svg\"\r\n      />\r\n      <button className=\"uploadSubmit\" type=\"submit\">\r\n        Upload\r\n          </button>\r\n      <div className=\"previewProfilePic\"></div>\r\n      <br />\r\n      <h3 className=\"Tribe\">Enter Tribe Name</h3>\r\n      <div onSubmit={onFormSubmit}>\r\n        <input type=\"text\" value={tribeName} onChange={(event) => SetTribeName(event.target.value)} />\r\n      </div>\r\n      {enabled ? (\r\n        <button className=\"submit\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      ) : (\r\n          <button className=\"tribeSubmit\" disabled type=\"submit\">\r\n            Submit\r\n          </button>\r\n        )}\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getDinos } from \"../../utils/api\";\r\nimport \"./Library.css\";\r\nimport Links from \"../navigation/Links\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Table = () => {\r\n  const [dinos, setDinos] = useState([]);\r\n  const userID = useSelector((state) => state.id);\r\n  useEffect(() => {\r\n    async function displayDinos() {\r\n      setDinos(await getDinos(userID));\r\n    }\r\n    displayDinos();\r\n  }, [userID]);\r\n\r\n  const renderHeader = () => {\r\n    let headerElement = [\r\n      \"Ark id\",\r\n      \"Type\",\r\n      \"Level\",\r\n      \"Status\",\r\n      \"name\",\r\n      \"gender\",\r\n      \"health\",\r\n      \"stamina\",\r\n      \"oxygen\",\r\n      \"food\",\r\n      \"weight\",\r\n      \"melee\",\r\n      \"speed\",\r\n      \"torpor\",\r\n      \"imprint\",\r\n      \"remove\",\r\n    ];\r\n    return headerElement.map((key, index) => {\r\n      return <th key={index}>{key.toUpperCase()}</th>;\r\n    });\r\n  };\r\n  const renderBody = () => {\r\n    return (\r\n      dinos &&\r\n      dinos.map(\r\n        ({\r\n          id,\r\n          creatureType,\r\n          level,\r\n          status,\r\n          name,\r\n          gender,\r\n          health,\r\n          stamina,\r\n          oxygen,\r\n          food,\r\n          weight,\r\n          meleeDamage,\r\n          movementSpeed,\r\n          torpidity,\r\n          imprinting,\r\n        }) => {\r\n          return (\r\n            <tr key={id}>\r\n              <td>{id}</td>\r\n              <td>{creatureType}</td>\r\n              <td>{level}</td>\r\n              <td>{status}</td>\r\n              <td>{name}</td>\r\n              <td>{gender}</td>\r\n              <td>{health}</td>\r\n              <td>{stamina}</td>\r\n              <td>{oxygen}</td>\r\n              <td>{food}</td>\r\n              <td>{weight}</td>\r\n              <td>{meleeDamage}</td>\r\n              <td>{movementSpeed}</td>\r\n              <td>{torpidity}</td>\r\n              <td>{imprinting}</td>\r\n              <td className=\"remove\">\r\n                <button id=\"button\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        },\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Links />\r\n      <h1 id=\"title\">Dino Library</h1>\r\n      <table id=\"dino\">\r\n        <thead>\r\n          <tr>{renderHeader()}</tr>\r\n        </thead>\r\n        <tbody>{renderBody()}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default Table;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst UseEUpdate = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    email2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  });\r\n\r\n  return { handleChange, values, handleSubmit, errors };\r\n};\r\n\r\nexport default UseEUpdate;\r\n","export default function ValidateEmail(values) {\r\n  let errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.email2) {\r\n    errors.email2 = \"Email required\";\r\n  } else if (values.email2 !== values.email) {\r\n    errors.email2 = \"Emails do not match\";\r\n  }\r\n  return errors;\r\n}\r\n","import React from \"react\";\r\nimport UseEUpdate from \"./UseEUpdate\";\r\nimport ValidateEmail from \"./ValidateEmail\";\r\nimport \"./Email.css\";\r\n\r\nconst UpdateEmail = ({ submitForm }) => {\r\n  const { handleChange, values, handleSubmit, errors } = UseEUpdate(submitForm, ValidateEmail);\r\n\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n        <h3>Change Your Email Address</h3>\r\n        <div className=\"current-form-inputs\">\r\n          <label className=\"current-label\">Enter Your Current Email Address:</label>\r\n          <input\r\n            className=\"current-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Current Email Address\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"new-form-inputs\">\r\n          <label className=\"new-label\">Enter Your New Email Address:</label>\r\n          <input\r\n            className=\"new-input\"\r\n            type=\"email\"\r\n            name=\"email2\"\r\n            placeholder=\"Confirm Your New Email Address\"\r\n            value={values.email2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email2 && <p>{errors.email2}</p>}\r\n        </div>\r\n        <button className=\"form-input-btn\" type=\"submit\">\r\n          Confirm\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEmail;\r\n","import React from \"react\";\r\n\r\nconst SuccessfulUpdate = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <h3 className=\"form-success\">We have received your request!</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessfulUpdate;\r\n","import React, { useState } from \"react\";\r\nimport UpdateEmail from \"./UpdateEmail\";\r\nimport SuccessfulUpdate from \"./SuccessfulUpdate\";\r\n\r\nconst UpdateEmailForm = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        {!isSubmitted ? <UpdateEmail submitForm={submitForm} /> : <SuccessfulUpdate />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateEmailForm;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Links from \"../../navigation/Links\";\r\nimport EmailUpdateForm from \"./email/EmailUpdateForm\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport default function Settings() {\r\n  return (\r\n    <>\r\n      <Links />\r\n      <EmailUpdateForm />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n// import \"./components/dinocard/DinoCard\";\r\nimport './DinoCard.css'\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction DinoCard(props) {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <img src={props.img} onClick={() => setModalIsOpen(true)} alt=\"default-dino\" />\r\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n        <h2>Dino Library</h2>\r\n        <p>Welcome to default Ark library</p>\r\n        <div>\r\n          <button className=\"button\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DinoCard;\r\n\r\n// import DinoCard from \"DinoCard.js\";\r\n// import giantdino from \"../../assests/defaultdinos/gigantosaurus.JPG\";\r\n// import quetzaldino from \"../../assests/defaultdinos/quetzal.JPG\";\r\n// import stegosaurus from \"../../assests/defaultdinos/stegosaurus.JPG\";\r\n// import tusoteuthis from \"../../assests/defaultdinos/tusoteuthis.JPG\";\r\n// import yutyrannus from \"../../assests/defaultdinos/yutyrannus.JPG\";\r\n// function Library(props) {\r\n//   return (\r\n//     <div>\r\n//       <DinoCard img={giantdino} />\r\n//       <DinoCard img={quetzaldino} />\r\n//       <DinoCard img={stegosaurus} />\r\n//       <DinoCard img={tusoteuthis} />\r\n//       <DinoCard img={yutyrannus} />\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Library;\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ConnectedRoute from \"../ConnectedRoute\";\r\nimport Home from \"../../screens/Home\";\r\nimport Dashboard from \"../../screens/Dashboard\";\r\nimport NotFound from \"../../screens/NotFound\";\r\nimport Input from \"../Input\";\r\nimport Profile from \"../../components/profile/Profile\";\r\nimport Library from \"../library/Library\";\r\nimport Settings from \"../../components/profile/settings/Settings\";\r\nimport \"./Navigation.css\";\r\nimport DinoCard from \"../dinocard/DinoCard\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <Switch>\r\n      <ConnectedRoute exact path=\"/\" redirectIfAuthenticated component={Home} />\r\n      <ConnectedRoute exact isProtected path=\"/dashboard\" component={Dashboard} />\r\n      <ConnectedRoute exact path=\"/user\" component={Profile} />\r\n      <ConnectedRoute path=\"/input\" component={Input} />\r\n      <ConnectedRoute path=\"/library\" component={Library} />\r\n      <ConnectedRoute path=\"/dinocard\" component={DinoCard} />\r\n      <ConnectedRoute exact path=\"/user/settings\" component={Settings} />\r\n      <ConnectedRoute path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#282c34\",\r\n  toggleBorder: \"#FFF\",\r\n  background: \"#363537\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"#282c34\",\r\n  text: \" #fff\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n};\r\n","import React from \"react\";\r\nimport { func, string } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst Button = styled.button`\r\n  background: ${({ theme }) => theme.background};\r\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  font-size:0.8rem;\r\n  padding: 0.6rem;\r\n  }\r\n`;\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  return <Button onClick={toggleTheme}>Switch Theme</Button>;\r\n};\r\nToggle.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\nexport default Toggle;\r\n","export default __webpack_public_path__ + \"static/media/stegorock.c603ac0c.gif\";","import { v4 } from \"uuid\";\r\nimport { getUser, register } from \"../../utils/api\";\r\n\r\nexport const SIGNUP = \"SIGNUP\";\r\nexport const signUp = (email) => {\r\n  const id = v4();\r\n  register({\r\n    id: id,\r\n    email: email,\r\n    name: \"\",\r\n    tribeName: \"\",\r\n  });\r\n\r\n  return {\r\n    type: SIGNUP,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const logIn = async (email) => {\r\n  const getuser = await getUser(email);\r\n  return {\r\n    type: LOGIN,\r\n    payload: getuser,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/navigation/Navigation\";\r\nimport useAuth from \"./hooks/useAuth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"./components/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"./components/Themes\";\r\nimport { useDarkMode } from \"./components/useDarkMode\";\r\nimport Toggle from \"./components/Toggler\";\r\nimport logo from \"../src/assets/stegorock.gif\";\r\nimport { signUp, logIn } from \"./store/actions/users\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function App() {\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\r\n\r\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\r\n\r\n  if (!mountedComponent) return <div />;\r\n\r\n  async function signUpNow() {\r\n    try {\r\n      const email = prompt(\"Enter your email\");\r\n      await dispatch(signUp(email));\r\n      loginNow(email);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const handleLogIn = (e) => {\r\n    e.preventDefault();\r\n    loginNow();\r\n  };\r\n\r\n  async function loginNow(email) {\r\n    try {\r\n      if (!email) {\r\n        email = prompt(\"Enter your email\");\r\n      }\r\n      dispatch(await logIn(email));\r\n      await auth.login(email);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  if (auth.loading || auth.loggingIn || auth.loggingOut) {\r\n    return <img src={logo} alt=\"Loading.......\" />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n      <>\r\n        <GlobalStyles />\r\n        <div className=\"App\">\r\n          <Toggle theme={theme} toggleTheme={themeToggler} /> <Navigation />\r\n          {auth.loggedIn ? (\r\n            <div className=\"loginStatus\">\r\n              You are logged-in.\r\n              <button className=\"logout\" onClick={() => auth.logout()}>\r\n                Logout\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <button className=\"signup\" onClick={signUpNow}>\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button className=\"login\" onClick={handleLogIn}>\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n// export default App;\r\n","import { useEffect, useState } from \"react\";\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [mountedComponent, setMountedComponent] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    localTheme && setTheme(localTheme);\r\n    setMountedComponent(true);\r\n  }, []);\r\n  return [theme, themeToggler, mountedComponent];\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { LOGIN, SIGNUP } from \"../actions/users\";\r\n\r\nlet initialState = { id: \"\" };\r\n\r\nexport const userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN:\r\n      return {\r\n        id: payload,\r\n      };\r\n    case SIGNUP:\r\n      return {\r\n        id: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore } from \"redux\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return undefined;\r\n  }\r\n}\r\nconst persistedState = loadFromLocalStorage();\r\nexport const store = createStore(userReducer, persistedState, composeWithDevTools());\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/reduxStore\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}